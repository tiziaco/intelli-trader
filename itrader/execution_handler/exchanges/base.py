from abc import ABCMeta, abstractmethod

from itrader.events_handler.event import OrderEvent

class AbstractExchange(object):
	"""
	The ExecutionHandler abstract class handles the interaction
	between a set of order objects generated by a PortfolioHandler
	and the set of Fill objects that actually occur in the
	market.
	"""

	__metaclass__ = ABCMeta

	@abstractmethod
	def execute_order(self, event: OrderEvent):
		"""
		Takes an OrderEvent and executes it, producing
		a FillEvent that gets placed onto the events queue.

		Parameters:
		event - Contains an Event object with order information.
		"""
		raise NotImplementedError("Should implement execute_order()")
