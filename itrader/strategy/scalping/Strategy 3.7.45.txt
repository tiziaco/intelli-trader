//--------------------------------------------------------------------
// Pseudo Source Code of Strategy 3.7.45
//
//   Generated by StrategyQuant X Build 136 for MetaTrader4
//   at 02/02/2023 11:26
//
//   Backtested on BTCUSDT_M15 / M15, 2017.08.17 - 2023.02.01
//   Backtest engine: MetaTrader4
//--------------------------------------------------------------------

//--------------------------------------------------------------------
//  Strategy Parameters
//--------------------------------------------------------------------
int MagicNumber = 11111;
int StochSlowDKPeriod1 = 5;
int StochSlowDDPeriod1 = 73;
int StochSlowDSlowing1 = 53;
int RSIPeriod1 = 47;
int KCerPeriod1 = 20;
double ProfitTarget1 = 2;
double StopLossCoef1 = 2.6;

Main chart = Current Symbol / Current TF;

//--------------------------------------------------------------------
// Trading options logic
//--------------------------------------------------------------------

Don't Trade On Weekends = false (Friday 0038 - Sunday 0038);
Exit at End Of Day = false (2304);
Exit On Friday = false (2040);
LimitSignalsTimeRange = false (0800 - 1600, Exit at End: false, Orders to close: All);
LimitMaxDistanceFromMarketPrice = false;   //Limit max distance
MaxDistanceFromMarketPct = 6;   //Max distance %
MaxTradesPerDay = 0;
Min SL: 0, Max SL: 0, Min PT: 0, Max PT: 0; // in ticks/pips, 0 means unlimited


//--------------------------------------------------------------------
// Trading rule: Trading signals (On Bar Open)
//--------------------------------------------------------------------                   
LongEntrySignal = (((Stochastic(Main chart,StochSlowDKPeriod1, StochSlowDDPeriod1, StochSlowDSlowing1).Slow%D[8] is rising)
   and (RSI(Main chart,RSIPeriod1, PRICE_CLOSE)[3] > 65))
   and (KeltnerChannel(Main chart,KCerPeriod1, 0.4).Upper[8] is rising));

ShortEntrySignal = (((Stochastic(Main chart,StochSlowDKPeriod1, StochSlowDDPeriod1, StochSlowDSlowing1).Slow%D[8] is falling)
   and (RSI(Main chart,RSIPeriod1, PRICE_CLOSE)[3] < 35))
   and (KeltnerChannel(Main chart,KCerPeriod1, 0.4).Lower[8] is falling));

LongExitSignal = false;

ShortExitSignal = false;



//--------------------------------------------------------------------
// Trading rule: Long entry (On Bar Open)
//--------------------------------------------------------------------                   
if LongEntrySignal
{
    // Action #1
    Open Long order at Low(Main chart)[9] Stop;
        Order valid for 19 bars;
        Duplicate trades: disabled; 
        Replacing pending orders: allowed; 
        Stop Loss = StopLossCoef1 * ATR(15);
        Profit target = ProfitTarget1 %;
}


//--------------------------------------------------------------------
// Trading rule: Short entry (On Bar Open)
//--------------------------------------------------------------------                   
if (ShortEntrySignal
   and Not LongEntrySignal)
{
    // Action #1
    Open Short order at High(Main chart)[9] Stop;
        Order valid for 19 bars;
        Duplicate trades: disabled; 
        Replacing pending orders: allowed; 
        Stop Loss = StopLossCoef1 * ATR(15);
        Profit target = ProfitTarget1 %;
}


//--------------------------------------------------------------------
// Trading rule: Long exit (On Bar Open)
//--------------------------------------------------------------------                   
if ((LongExitSignal
   and Not LongEntrySignal)
   and (MarketPosition("Any", MagicNumber, "") is Long))
{
    // Action #1
    Close all positions for Symbol = Any and Magic Number = MagicNumber;

}


//--------------------------------------------------------------------
// Trading rule: Short exit (On Bar Open)
//--------------------------------------------------------------------                   
if ((ShortExitSignal
   and Not ShortEntrySignal)
   and (MarketPosition("Any", MagicNumber, "") is Short))
{
    // Action #1
    Close all positions for Symbol = Any and Magic Number = MagicNumber;

}




